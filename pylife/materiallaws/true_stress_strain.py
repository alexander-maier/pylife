# -*- coding: utf-8 -*-
"""
Created on Fri Apr 16 10:29:33 2021

@author: SIS3SI
"""

import numpy as np


def true_strain(tech_strain):
    """
    Calculation of true strain data (from experimental data generated by tensile experiments)
    
    Parameters
    ----------
    tech_strain: array like of float
    
    Returns
    -------    
    true_strain: array of float
    
   """
    return np.log(1. + tech_strain)


def true_stress(tech_stress, tech_strain):
    """
     Calculate the true stress data from technical data
    
    Parameters
    ----------
    tech_stress : array like of float
        stress data from tensile experiments
    tech_strain : list of float
        strain data from tensile experiments

    Returns
    -------
    true stress : list of float
      

    """
    return tech_stress * (1. + tech_strain)



def true_fracture_strain(reduction_area_fracture):
    """
    Calculation of the true frature strain (in the FKM Non Linear (static assessment))
    Parameters
    ----------
    reduction_area_fracture : float
        directly measured on the fractures sample

    Returns
    -------
    true_fracture_strain: float
        descrivbes the calculated true fracture strain.

    """
    return np.log(1./(1. - reduction_area_fracture))


def true_fracture_stress(fracture_force, initial_cross_section, reduction_area_fracture):
    """
    Calculation of the true fracture stress (euqation FKM Non-linear (static assessment))
    
    Parameters
    ----------
    fracture_force : float
        from experimental results
    initial_cross_section : float
        cross section of initial tensile sample.
    reduction_area_fracture : float
         directly measured on the fractures sample.

    Returns
    -------
    true fracture stress: float
        calculated true fracture stress of the sample.

    """
    return fracture_force/(initial_cross_section * (1. - reduction_area_fracture))


